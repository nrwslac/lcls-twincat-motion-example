<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_Mirror_States" Id="{f3fcd688-0d5b-4d3a-a8bb-d0634527a64d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Mirror_States EXTENDS FB_PositionStateBase_WithPMPS
VAR_INPUT
    enumSet : INT;
    stM9X9IN : DUT_PositionState;
    stM9X9OUT : DUT_PositionState;
    
    sINtype : STRING := '';
    nINPosition : UDINT;
    fINDelta : LREAL;
    fINVelocity : LREAL;
    
    sOUTtype : STRING := '';
    nOUTPosition : LREAL;
    fOUTDelta : LREAL;
    fOUTVelocity : LREAL;
    
END_VAR
VAR_OUTPUT
    {attribute 'pytmc' := '
      pv: GET;
      io: i;
    '}
    enumGet : ENUM_Mirror_States;
  END_VAR
VAR
    bInitState : BOOL := TRUE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[if bInitState THEN
    bInitState := FALSE;
    stM9X9IN.bUseRawCounts := FALSE;
    stM9X9IN.bMoveOk := TRUE;
    stM9X9IN.bValid := TRUE;
    //stM9X9.nRequestAssertionID := nTransitionAssertionID + 1;
    stM9X9IN.sName := sINtype;
    stM9X9IN.fPosition := nINPosition;
    stM9X9IN.fDelta := fINDelta;
    stM9X9IN.fVelocity := fINVelocity;
    
    stM9X9OUT.bUseRawCounts := FALSE;
    stM9X9OUT.bMoveOk := TRUE;
    stM9X9OUT.bValid := TRUE;
    stM9X9OUT.sName := sOUTtype;
    stM9X9OUT.fPosition := nOUTPosition;
    stM9X9OUT.fDelta := fOUTDelta;
    stM9X9OUT.fVelocity := fOUTVelocity;
    
    
    
    arrStates[1] := stM9X9IN;
    arrStates[2] := stM9X9OUT;
END_IF

setState := enumSet;
Exec();
enumGet := getState;
enumSet := setState;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>